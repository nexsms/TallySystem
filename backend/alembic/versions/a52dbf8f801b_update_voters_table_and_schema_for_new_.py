"""update voters table and schema for new tallying system

Revision ID: a52dbf8f801b
Revises: 7b7ee1dfdcc7
Create Date: 2025-10-22 19:17:19.253217

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a52dbf8f801b'
down_revision: Union[str, Sequence[str], None] = '7b7ee1dfdcc7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('voters', sa.Column('id_number', sa.String(), nullable=False))
    op.add_column('voters', sa.Column('county_code', sa.String(), nullable=True))
    op.add_column('voters', sa.Column('county_name', sa.String(), nullable=True))
    op.add_column('voters', sa.Column('constituency_code', sa.String(), nullable=True))
    op.add_column('voters', sa.Column('constituency_name', sa.String(), nullable=True))
    op.add_column('voters', sa.Column('ward_code', sa.String(), nullable=True))
    op.add_column('voters', sa.Column('ward_name', sa.String(), nullable=True))
    op.alter_column('voters', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('voters', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'voters', ['id_number'])
    op.drop_constraint(op.f('voters_constituency_id_fkey'), 'voters', type_='foreignkey')
    op.drop_constraint(op.f('voters_ward_id_fkey'), 'voters', type_='foreignkey')
    op.drop_constraint(op.f('voters_county_id_fkey'), 'voters', type_='foreignkey')
    op.drop_column('voters', 'ward_id')
    op.drop_column('voters', 'constituency_id')
    op.drop_column('voters', 'county_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('voters', sa.Column('county_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('voters', sa.Column('constituency_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('voters', sa.Column('ward_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('voters_county_id_fkey'), 'voters', 'counties', ['county_id'], ['id'])
    op.create_foreign_key(op.f('voters_ward_id_fkey'), 'voters', 'wards', ['ward_id'], ['id'])
    op.create_foreign_key(op.f('voters_constituency_id_fkey'), 'voters', 'constituencies', ['constituency_id'], ['id'])
    op.drop_constraint(None, 'voters', type_='unique')
    op.alter_column('voters', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('voters', 'first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('voters', 'ward_name')
    op.drop_column('voters', 'ward_code')
    op.drop_column('voters', 'constituency_name')
    op.drop_column('voters', 'constituency_code')
    op.drop_column('voters', 'county_name')
    op.drop_column('voters', 'county_code')
    op.drop_column('voters', 'id_number')
    # ### end Alembic commands ###
